{"version":3,"sources":["Components/App/App.module.css","Components/AddContact/AddContact.module.css","Transition/TransitionLogo.module.css","Components/Contacts/ContactsList.module.css","Transition/TransitionListItem.module.css","Transition/TransitionFilter.module.css","redux/actionsTypes.js","redux/contactsActions.js","Components/AddContact/AddContact.js","Components/AddContact/AddContactConnect.js","Components/Contacts/ContactsList.js","redux/selector.js","Components/Contacts/ContactsListConnect.js","Components/Filter/Filter.js","Components/Filter/FilterConnect.js","Components/App/App.js","redux/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","Type","addContact","createAction","deleteContact","filterContact","InitialState","name","number","AddContact","state","contactToAdd","isLogo","handleChange","target","value","setState","id","uuidv4","handleSubmit","e","preventDefault","props","reset","this","CSSTransition","in","classNames","TransitionLogo","timeout","unmountOnExit","onSubmit","type","placeholder","onChange","className","styles","buttonAdd","Component","connect","dispatch","contact","actions","ContactsList","contacts","filter","filteredContacts","toLowerCase","includes","filterContacts","console","log","TransitionGroup","component","map","key","TransitionListItem","onClick","button","getContact","getFilter","Filter","handleFilter","TransitionFilter","length","contactsActions","App","container","AddContactConnect","FilterConnect","ContactsListConnect","contactsReducer","createReducer","payload","alert","filterReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","devToolsEnhancer","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ab5ae7b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3twmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonAdd\":\"AddContact_buttonAdd__2G28W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionLogo_enter__1tqM8\",\"enterActive\":\"TransitionLogo_enterActive__3n2nV\",\"exit\":\"TransitionLogo_exit__LTW0B\",\"exitActive\":\"TransitionLogo_exitActive__1nRB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__3FVYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionListItem_enter__2QprP\",\"enterActive\":\"TransitionListItem_enterActive__3Su1q\",\"exit\":\"TransitionListItem_exit__2Dca_\",\"exitActive\":\"TransitionListItem_exitActive__2Ai0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionFilter_enter__2_ISb\",\"enterActive\":\"TransitionFilter_enterActive__2pAPJ\",\"exit\":\"TransitionFilter_exit__t3lk9\",\"exitActive\":\"TransitionFilter_exitActive__1NwB_\"};","export const Type = {\n  ADD: \"ADD_CONTACT\",\n  DELETE: \"DELETE_CONTACT\",\n  FILTER: \"FILTER_CONTACT\",\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { Type } from \"./actionsTypes\";\n\nexport const addContact = createAction(Type.ADD);\n\nexport const deleteContact = createAction(Type.DELETE);\n\nexport const filterContact = createAction(Type.FILTER);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./AddContact.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport TransitionLogo from \"../../Transition/TransitionLogo.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst InitialState = { name: \"\", number: \"\" };\n\nexport default class AddContact extends Component {\n  state = { contactToAdd: { ...InitialState }, isLogo: false };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState(({ contactToAdd }) => ({\n      contactToAdd: { ...contactToAdd, id: uuidv4(), [name]: value },\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!this.state.contactToAdd.name) {\n      return;\n    }\n\n    if (!this.state.contactToAdd.number) {\n      return;\n    }\n\n    this.props.addContact({ ...this.state.contactToAdd });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ contactToAdd: { ...InitialState } });\n  };\n\n  componentDidMount() {\n    this.setState({ isLogo: true });\n  }\n\n  render() {\n    return (\n      <>\n        <CSSTransition\n          in={this.state.isLogo}\n          classNames={TransitionLogo}\n          timeout={500}\n          unmountOnExit\n        >\n          <h2>Phonebook</h2>\n        </CSSTransition>\n        <form onSubmit={this.handleSubmit}>\n          <label name=\"name\">\n            Name\n            <input\n              type=\"text\"\n              placeholder=\"Enter name\"\n              name=\"name\"\n              value={this.state.contactToAdd.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label name=\"number\">\n            Number\n            <input\n              type=\"text\"\n              placeholder=\"Enter phone number\"\n              name=\"number\"\n              value={this.state.contactToAdd.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.buttonAdd} type=\"submit\">\n            Add Contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n","import * as actions from \"../../redux/contactsActions\";\nimport { connect } from \"react-redux\";\nimport AddContact from \"./AddContact\";\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (contact) => dispatch(actions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport styles from \"./ContactsList.module.css\";\nimport TransitionListItem from \"../../Transition/TransitionListItem.module.css\";\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nconst ContactsList = ({ contacts, filter, deleteContact }) => {\n  const filteredContacts = filter ? filterContacts(contacts, filter) : contacts;\n  console.log(\"contacts\", contacts);\n  return (\n    <TransitionGroup component=\"ul\">\n      {filteredContacts.map(({ name, number, id }) => (\n        <CSSTransition\n          timeout={250}\n          unmountOnExit\n          key={id}\n          classNames={TransitionListItem}\n        >\n          <li>\n            <p>\n              {name}: <span>{number}</span>\n              <button\n                type=\"button\"\n                onClick={() => deleteContact(id)}\n                className={styles.button}\n              >\n                X\n              </button>\n            </p>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","export const getContact = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\n","import { connect } from \"react-redux\";\nimport * as actions from \"../../redux/contactsActions\";\nimport ContactsList from \"./ContactsList\";\nimport { getContact, getFilter } from \"../../redux/selector\";\n\nconst mapStateToProps = (state) => ({\n  contacts: getContact(state),\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (filter) => dispatch(actions.deleteContact(filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport TransitionFilter from \"../../Transition/TransitionFilter.module.css\";\n\nconst Filter = ({ contacts, filter, handleFilter }) => (\n  <CSSTransition\n    classNames={TransitionFilter}\n    timeout={250}\n    unmountOnExit\n    in={contacts.length > 1}\n  >\n    <div>\n      <p>Find contact by name:</p>\n      <input\n        placeholder=\"Find...\"\n        value={filter}\n        onChange={(e) => handleFilter(e.target.value)}\n      />\n    </div>\n  </CSSTransition>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n","import Filter from \"./Filter\";\nimport { connect } from \"react-redux\";\nimport * as contactsActions from \"../../redux/contactsActions\";\nimport { getContact, getFilter } from \"../../redux/selector\";\n\nconst mapStateToProps = (state) => ({\n  contacts: getContact(state),\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleFilter: (filter) => dispatch(contactsActions.filterContact(filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport AddContactConnect from \"../AddContact/AddContactConnect\";\nimport ContactsListConnect from \"../Contacts/ContactsListConnect\";\nimport FilterConnect from \"../Filter/FilterConnect\";\n\nconst App = () => (\n  <div className={styles.container}>\n    <AddContactConnect />\n    <FilterConnect />\n    <ContactsListConnect />\n  </div>\n);\nexport default App;\n","import { Type } from \"./actionsTypes\";\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\n\nconst contacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst contactsReducer = createReducer(contacts, {\n  [Type.ADD]: (state, { payload }) => {\n    if (\n      state\n        .map(({ name }) => name.toLowerCase())\n        .includes(payload.name.toLowerCase())\n    ) {\n      alert(`${payload.name} is already in contact`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n\n  [Type.DELETE]: (state, { payload }) => [\n    ...state.filter((contact) => contact.id !== payload),\n  ],\n});\n\nconst filterReducer = createReducer(null, {\n  [Type.FILTER]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { createStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contactsReducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\n\nexport const store = createStore(persistedReducer, devToolsEnhancer());\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}